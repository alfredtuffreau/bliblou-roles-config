Resources:
  IdentityPoolRoleAttachmentMapping:
    Type: Custom::DynamicMapTransform
    Properties:
      ServiceToken: !GetAtt MapRoleLambdaFunction.Arn
      AttributeName: RoleMappings
      Entries:
        - Key: !Join
          - ":"
          - - ${self:custom.userPoolProviderName}
            - ${self:custom.userPoolClient}
          Value:
            AmbiguousRoleResolution: AuthenticatedRole
            Type: Rules
            RulesConfiguration:
              Rules:
                - Claim: cognito:groups
                  MatchType: Contains
                  Value: chefs
                  RoleARN: !GetAtt CognitoEditorsAuthRole.Arn
                - Claim: cognito:groups
                  MatchType: Contains
                  Value: reviewers
                  RoleARN: !GetAtt CognitoEditorsAuthRole.Arn
                - Claim: cognito:groups
                  MatchType: Contains
                  Value: publishers
                  RoleARN: !GetAtt CognitoEditorsAuthRole.Arn

  CognitoIdentityPoolRoles:
    Type: AWS::Cognito::IdentityPoolRoleAttachment
    Properties:
      IdentityPoolId: ${self:custom.identityPoolId}
      Roles:
        authenticated: !GetAtt CognitoAuthRole.Arn
        unauthenticated: !GetAtt CognitoUnauthRole.Arn
      RoleMappings: 
        !GetAtt IdentityPoolRoleAttachmentMapping.RoleMappings

  CognitoUnauthRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: 'Allow'
            Principal:
              Federated: 'cognito-identity.amazonaws.com'
            Action:
              - 'sts:AssumeRoleWithWebIdentity'
            Condition:
              StringEquals:
                'cognito-identity.amazonaws.com:aud': ${self:custom.identityPoolId}
              'ForAnyValue:StringLike':
                'cognito-identity.amazonaws.com:amr': unauthenticated
      Policies:
        - PolicyName: 'CognitoAuthorizedPolicy'
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: 'Allow'
                Action:
                  - 'mobileanalytics:PutEvents'
                  - 'cognito-sync:*'
                  - 'cognito-identity:*'
                Resource: '*'
          
  CognitoAuthRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: 'Allow'
            Principal:
              Federated: 'cognito-identity.amazonaws.com'
            Action:
              - 'sts:AssumeRoleWithWebIdentity'
            Condition:
              StringEquals:
                'cognito-identity.amazonaws.com:aud': ${self:custom.identityPoolId}
              'ForAnyValue:StringLike':
                'cognito-identity.amazonaws.com:amr': authenticated
      Policies:
        - PolicyName: 'CognitoAuthorizedPolicy'
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: 'Allow'
                Action:
                  - 'mobileanalytics:PutEvents'
                  - 'cognito-sync:*'
                  - 'cognito-identity:*'
                Resource: '*'
              
              - Effect: 'Allow'
                Action:
                  - 'execute-api:Invoke'
                Resource:
                  Fn::Join:
                    - ''
                    -
                      - 'arn:aws:execute-api:'
                      - Ref: AWS::Region
                      - ':'
                      - Ref: AWS::AccountId
                      - ':'
                      - ${self:custom.recipesApiGateway}
                      - '/*/GET/*'
              
              - Effect: 'Allow'
                Action:
                  - 's3:*'
                Resource:
                  - Fn::Join:
                    - ''
                    -
                      - ${self:custom.recipePicturesBucketArn}
                      - '/*'
                      
  CognitoEditorsAuthRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: 'Allow'
            Principal:
              Federated: 'cognito-identity.amazonaws.com'
            Action:
              - 'sts:AssumeRoleWithWebIdentity'
            Condition:
              StringEquals:
                'cognito-identity.amazonaws.com:aud': ${self:custom.identityPoolId}
              'ForAnyValue:StringLike':
                'cognito-identity.amazonaws.com:amr': authenticated
      Policies:
        - PolicyName: 'CognitoAuthorizedPolicy'
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: 'Allow'
                Action:
                  - 'mobileanalytics:PutEvents'
                  - 'cognito-sync:*'
                  - 'cognito-identity:*'
                Resource: '*'
              
              - Effect: 'Allow'
                Action:
                  - 'execute-api:Invoke'
                Resource:
                  Fn::Join:
                    - ''
                    -
                      - 'arn:aws:execute-api:'
                      - Ref: AWS::Region
                      - ':'
                      - Ref: AWS::AccountId
                      - ':'
                      - ${self:custom.recipesApiGateway}
                      - '/*/*/*'
              
              - Effect: 'Allow'
                Action:
                  - 's3:*'
                Resource:
                  - Fn::Join:
                    - ''
                    -
                      - ${self:custom.recipePicturesBucketArn}
                      - '/*'
  
Outputs:
  UnauthRoleId:
    Value: !Ref CognitoUnauthRole
  AuthRoleId:
    Value: !Ref CognitoAuthRole
  EditorsAuthRoleId:
    Value: !Ref CognitoEditorsAuthRole